{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cesar Boutoile777\\\\Connexion\\\\frontend\\\\dashboard\\\\src\\\\pages\\\\ImporterDonnees.js\";\nimport React, { useState } from 'react';\nimport { FiUpload, FiEdit, FiCheckCircle, FiSave, FiDatabase } from 'react-icons/fi';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Importation() {\n  // // Étape 1 : choix du type de projet\n  // const [selectedTypes, setSelectedTypes] = useState([]);\n  // const [typeSelected, setTypeSelected] = useState(false);\n\n  // // Étape 2 : gestion fichier et données Excel\n  // const [file, setFile] = useState(null);\n  // const [data, setData] = useState([]);\n  // const [editMode, setEditMode] = useState(false);\n  // const [editFinished, setEditFinished] = useState(false);\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [importStatus, setImportStatus] = useState(null);\n  // const rowsPerPage = 101;\n\n  // // Liste des types de projet (exemple, adapte à ton besoin)\n  // const projectTypes = [\n  //   \"Domaine A\",\n  //   \"Domaine B\",\n  //   \"Domaine C\",\n  //   \"Domaine D\",\n  // ];\n\n  // // Gestion changement checkbox\n  // const toggleType = (type) => {\n  //   if (selectedTypes.includes(type)) {\n  //     setSelectedTypes(selectedTypes.filter(t => t !== type));\n  //   } else {\n  //     setSelectedTypes([...selectedTypes, type]);\n  //   }\n  // };\n\n  // // Validation du choix type projet\n  // const handleValidateTypes = () => {\n  //   if (selectedTypes.length === 0) {\n  //     alert(\"Veuillez sélectionner au moins un type de projet.\");\n  //     return;\n  //   }\n  //   setTypeSelected(true);\n  // };\n\n  // // Revenir au choix type projet\n  // const handleResetTypes = () => {\n  //   setSelectedTypes([]);\n  //   setTypeSelected(false);\n  //   // Réinitialiser aussi tout le reste\n  //   setFile(null);\n  //   setData([]);\n  //   setEditMode(false);\n  //   setEditFinished(false);\n  //   setImportStatus(null);\n  // };\n\n  // Gestion fichier Excel (identique à ton code)\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setEditFinished(false);\n    setEditMode(false);\n    setCurrentPage(1);\n    setImportStatus(null);\n    const reader = new FileReader();\n    reader.onload = evt => {\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, {\n        type: \"binary\"\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const jsonData = XLSX.utils.sheet_to_json(ws, {\n        header: 1\n      });\n      setData(jsonData);\n    };\n    reader.readAsBinaryString(selectedFile);\n  };\n\n  // Edition tableau\n  const handleEdit = () => {\n    setEditMode(true);\n    setEditFinished(false);\n    setImportStatus(null);\n  };\n  const handleFinishEdit = () => {\n    setEditMode(false);\n    setEditFinished(true);\n  };\n  const handleCellChange = (rowIndex, colIndex, value) => {\n    const newData = [...data];\n    newData[rowIndex][colIndex] = value;\n    setData(newData);\n    setCurrentPage(1);\n  };\n  const handleSaveCopy = () => {\n    const ws = XLSX.utils.aoa_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Feuille1\");\n    XLSX.writeFile(wb, \"donnees_modifiees.xlsx\");\n  };\n\n  // Envoi au backend Flask\n  const handleImportToDB = async () => {\n    if (!file) {\n      setImportStatus({\n        success: false,\n        message: \"Veuillez sélectionner un fichier avant d'importer.\"\n      });\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(\"http://localhost:5000/auth/import_excel\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Erreur serveur : ${errorText}`);\n      }\n      const result = await response.json();\n      setImportStatus({\n        success: true,\n        message: result.message || \"Importation réussie !\"\n      });\n    } catch (error) {\n      setImportStatus({\n        success: false,\n        message: error.message || \"Erreur lors de l'importation.\"\n      });\n    }\n  };\n\n  // Pagination\n  const totalPages = Math.ceil(data.length / rowsPerPage);\n  const startIndex = (currentPage - 1) * rowsPerPage;\n  const endIndex = startIndex + rowsPerPage;\n  const pageData = data.slice(startIndex, endIndex);\n  const inputStyle = {\n    width: '100%',\n    minWidth: '200px',\n    border: 'none',\n    backgroundColor: 'transparent',\n    padding: '12px 16px',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    lineHeight: 'inherit',\n    color: 'black',\n    outline: 'none',\n    boxSizing: 'border-box',\n    textAlign: 'left'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 px-4 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl  md:text-5xl font-extrabold text-center text-green-700 mb-8\",\n        children: \"Importation Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), typeSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-xl mt-10 shadow-lg p-6 w-96 mx-auto mb-11 border border-green-500 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-green-700\",\n              children: \"Type(s) de projet s\\xE9lectionn\\xE9(s) :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), \" \", selectedTypes.join(\", \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetTypes,\n            className: \"text-red-600 underline hover:text-red-800\",\n            title: \"Changer la s\\xE9lection\",\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), !file && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-xl shadow-lg p-10 text-center border-2 border-dashed border-green-600 w-96 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(FiUpload, {\n            className: \"text-green-600 mx-auto mb-4\",\n            size: 80\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-green-700 mb-2\",\n            children: \"D\\xE9posez un fichier Excel ici\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-6\",\n            children: \"Veillez respecter le format du fichier xlsx. Si vous n'avez pas le bon format, rendez-vous sur \\\"Fonctionnement\\\" pour t\\xE9l\\xE9charger.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"inline-block bg-green-600 text-white px-6 py-3 rounded-lg cursor-pointer hover:bg-green-700 transition\",\n            children: [\"Choisir un fichier Excel\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".xlsx\",\n              className: \"hidden\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-700 text-center mb-4 italic\",\n            children: [\"Fichier s\\xE9lectionn\\xE9 : \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-auto rounded-lg shadow-md bg-white\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"min-w-full text-sm table-auto border-collapse\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"bg-green-700 text-white\",\n                  children: data[0] && data[0].map((col, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-4 py-3 text-left font-semibold\",\n                    children: col\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: pageData.slice(1).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"even:bg-gray-50 hover:bg-green-50\",\n                  children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-3 border-t border-gray-200 align-top\",\n                    style: editMode ? {\n                      minWidth: '200px'\n                    } : {},\n                    children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: cell || \"\",\n                      onChange: e => handleCellChange(startIndex + rowIndex + 1, colIndex, e.target.value),\n                      style: inputStyle,\n                      spellCheck: false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 33\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: cell\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 33\n                    }, this)\n                  }, colIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 29\n                  }, this))\n                }, rowIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), data.length > rowsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center gap-4 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n              disabled: currentPage === 1,\n              className: \"bg-gray-200 px-4 py-2 rounded hover:bg-gray-300 disabled:opacity-50\",\n              children: \"Pr\\xE9c\\xE9dent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Page \", currentPage, \" / \", totalPages]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n              disabled: currentPage === totalPages,\n              className: \"bg-gray-200 px-4 py-2 rounded hover:bg-gray-300 disabled:opacity-50\",\n              children: \"Suivant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap justify-center gap-4 mt-6\",\n            children: [!editMode && !editFinished && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleEdit,\n                className: \"bg-yellow-500 hover:bg-yellow-600 text-white px-5 py-2 rounded flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this), \" Modifier\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleImportToDB,\n                className: \"bg-green-700 hover:bg-green-800 text-white px-5 py-2 rounded flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(FiDatabase, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this), \" Importer dans la base\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleFinishEdit,\n              className: \"bg-blue-600 hover:bg-blue-700 text-white px-5 py-2 rounded flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(FiCheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this), \" Terminer les modifications\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 21\n            }, this), !editMode && editFinished && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSaveCopy,\n                className: \"bg-gray-700 hover:bg-gray-800 text-white px-5 py-2 rounded flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(FiSave, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 25\n                }, this), \" T\\xE9l\\xE9charger la copie modifi\\xE9e\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleImportToDB,\n                className: \"bg-green-700 hover:bg-green-800 text-white px-5 py-2 rounded flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(FiDatabase, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 25\n                }, this), \" Importer dans la base\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), importStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `mt-6 text-center font-semibold ${importStatus.success ? \"text-green-700\" : \"text-red-700\"}`,\n            children: importStatus.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_c = Importation;\nexport default Importation;\nvar _c;\n$RefreshReg$(_c, \"Importation\");","map":{"version":3,"names":["React","useState","FiUpload","FiEdit","FiCheckCircle","FiSave","FiDatabase","XLSX","jsxDEV","_jsxDEV","Fragment","_Fragment","Importation","handleFileChange","e","selectedFile","target","files","setFile","setEditFinished","setEditMode","setCurrentPage","setImportStatus","reader","FileReader","onload","evt","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","header","setData","readAsBinaryString","handleEdit","handleFinishEdit","handleCellChange","rowIndex","colIndex","value","newData","data","handleSaveCopy","aoa_to_sheet","book_new","book_append_sheet","writeFile","handleImportToDB","file","success","message","formData","FormData","append","response","fetch","method","body","ok","errorText","text","Error","json","error","totalPages","Math","ceil","length","rowsPerPage","startIndex","currentPage","endIndex","pageData","slice","inputStyle","width","minWidth","border","backgroundColor","padding","fontFamily","fontSize","lineHeight","color","outline","boxSizing","textAlign","className","children","fileName","_jsxFileName","lineNumber","columnNumber","typeSelected","selectedTypes","join","onClick","handleResetTypes","title","size","accept","onChange","name","map","col","i","row","cell","style","editMode","spellCheck","p","max","disabled","min","editFinished","importStatus","_c","$RefreshReg$"],"sources":["C:/Users/Cesar Boutoile777/Connexion/frontend/dashboard/src/pages/ImporterDonnees.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FiUpload, FiEdit, FiCheckCircle, FiSave, FiDatabase } from 'react-icons/fi';\r\nimport * as XLSX from 'xlsx';\r\n\r\nfunction Importation() {\r\n  // // Étape 1 : choix du type de projet\r\n  // const [selectedTypes, setSelectedTypes] = useState([]);\r\n  // const [typeSelected, setTypeSelected] = useState(false);\r\n\r\n  // // Étape 2 : gestion fichier et données Excel\r\n  // const [file, setFile] = useState(null);\r\n  // const [data, setData] = useState([]);\r\n  // const [editMode, setEditMode] = useState(false);\r\n  // const [editFinished, setEditFinished] = useState(false);\r\n  // const [currentPage, setCurrentPage] = useState(1);\r\n  // const [importStatus, setImportStatus] = useState(null);\r\n  // const rowsPerPage = 101;\r\n\r\n  // // Liste des types de projet (exemple, adapte à ton besoin)\r\n  // const projectTypes = [\r\n  //   \"Domaine A\",\r\n  //   \"Domaine B\",\r\n  //   \"Domaine C\",\r\n  //   \"Domaine D\",\r\n  // ];\r\n\r\n  // // Gestion changement checkbox\r\n  // const toggleType = (type) => {\r\n  //   if (selectedTypes.includes(type)) {\r\n  //     setSelectedTypes(selectedTypes.filter(t => t !== type));\r\n  //   } else {\r\n  //     setSelectedTypes([...selectedTypes, type]);\r\n  //   }\r\n  // };\r\n\r\n  // // Validation du choix type projet\r\n  // const handleValidateTypes = () => {\r\n  //   if (selectedTypes.length === 0) {\r\n  //     alert(\"Veuillez sélectionner au moins un type de projet.\");\r\n  //     return;\r\n  //   }\r\n  //   setTypeSelected(true);\r\n  // };\r\n\r\n  // // Revenir au choix type projet\r\n  // const handleResetTypes = () => {\r\n  //   setSelectedTypes([]);\r\n  //   setTypeSelected(false);\r\n  //   // Réinitialiser aussi tout le reste\r\n  //   setFile(null);\r\n  //   setData([]);\r\n  //   setEditMode(false);\r\n  //   setEditFinished(false);\r\n  //   setImportStatus(null);\r\n  // };\r\n\r\n  // Gestion fichier Excel (identique à ton code)\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    setFile(selectedFile);\r\n    setEditFinished(false);\r\n    setEditMode(false);\r\n    setCurrentPage(1);\r\n    setImportStatus(null);\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      const jsonData = XLSX.utils.sheet_to_json(ws, { header: 1 });\r\n      setData(jsonData);\r\n    };\r\n    reader.readAsBinaryString(selectedFile);\r\n  };\r\n\r\n  // Edition tableau\r\n  const handleEdit = () => {\r\n    setEditMode(true);\r\n    setEditFinished(false);\r\n    setImportStatus(null);\r\n  };\r\n\r\n  const handleFinishEdit = () => {\r\n    setEditMode(false);\r\n    setEditFinished(true);\r\n  };\r\n\r\n  const handleCellChange = (rowIndex, colIndex, value) => {\r\n    const newData = [...data];\r\n    newData[rowIndex][colIndex] = value;\r\n    setData(newData);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSaveCopy = () => {\r\n    const ws = XLSX.utils.aoa_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Feuille1\");\r\n    XLSX.writeFile(wb, \"donnees_modifiees.xlsx\");\r\n  };\r\n\r\n  // Envoi au backend Flask\r\n  const handleImportToDB = async () => {\r\n    if (!file) {\r\n      setImportStatus({ success: false, message: \"Veuillez sélectionner un fichier avant d'importer.\" });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      const response = await fetch(\"http://localhost:5000/auth/import_excel\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Erreur serveur : ${errorText}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      setImportStatus({ success: true, message: result.message || \"Importation réussie !\" });\r\n    } catch (error) {\r\n      setImportStatus({ success: false, message: error.message || \"Erreur lors de l'importation.\" });\r\n    }\r\n  };\r\n\r\n  // Pagination\r\n  const totalPages = Math.ceil(data.length / rowsPerPage);\r\n  const startIndex = (currentPage - 1) * rowsPerPage;\r\n  const endIndex = startIndex + rowsPerPage;\r\n  const pageData = data.slice(startIndex, endIndex);\r\n\r\n  const inputStyle = {\r\n    width: '100%',\r\n    minWidth: '200px',\r\n    border: 'none',\r\n    backgroundColor: 'transparent',\r\n    padding: '12px 16px',\r\n    fontFamily: 'inherit',\r\n    fontSize: 'inherit',\r\n    lineHeight: 'inherit',\r\n    color: 'black',\r\n    outline: 'none',\r\n    boxSizing: 'border-box',\r\n    textAlign: 'left',\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 px-4 py-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <h1 className=\"text-4xl  md:text-5xl font-extrabold text-center text-green-700 mb-8\">Importation Excel</h1>\r\n\r\n\r\n        {typeSelected && (\r\n          <>\r\n            {/* Affichage sélection type(s) */}\r\n            <div className=\"bg-white rounded-xl mt-10 shadow-lg p-6 w-96 mx-auto mb-11 border border-green-500 flex justify-between items-center\">\r\n              <div>\r\n                <strong className=\"text-green-700\">Type(s) de projet sélectionné(s) :</strong>{\" \"}\r\n                {selectedTypes.join(\", \")}\r\n              </div>\r\n              <button\r\n                onClick={handleResetTypes}\r\n                className=\"text-red-600 underline hover:text-red-800\"\r\n                title=\"Changer la sélection\"\r\n              >\r\n                Modifier\r\n              </button>\r\n            </div>\r\n\r\n            {!file && (\r\n              <div className=\"bg-white rounded-xl shadow-lg p-10 text-center border-2 border-dashed border-green-600 w-96 mx-auto\">\r\n                <FiUpload className=\"text-green-600 mx-auto mb-4\" size={80} />\r\n                <h2 className=\"text-xl font-semibold text-green-700 mb-2\">Déposez un fichier Excel ici</h2>\r\n                <p className=\"text-gray-600 mb-6\">\r\n                  Veillez respecter le format du fichier xlsx. Si vous n'avez pas le bon format, rendez-vous sur \"Fonctionnement\" pour télécharger.\r\n                </p>\r\n                <label className=\"inline-block bg-green-600 text-white px-6 py-3 rounded-lg cursor-pointer hover:bg-green-700 transition\">\r\n                  Choisir un fichier Excel\r\n                  <input type=\"file\" accept=\".xlsx\" className=\"hidden\" onChange={handleFileChange} />\r\n                </label>\r\n              </div>\r\n            )}\r\n\r\n            {file && (\r\n              <div className=\"mt-8\">\r\n                <div className=\"text-gray-700 text-center mb-4 italic\">Fichier sélectionné : {file.name}</div>\r\n\r\n                {/* Tableau Excel */}\r\n                <div className=\"overflow-auto rounded-lg shadow-md bg-white\">\r\n                  <table className=\"min-w-full text-sm table-auto border-collapse\">\r\n                    <thead>\r\n                      <tr className=\"bg-green-700 text-white\">\r\n                        {data[0] &&\r\n                          data[0].map((col, i) => (\r\n                            <th key={i} className=\"px-4 py-3 text-left font-semibold\">\r\n                              {col}\r\n                            </th>\r\n                          ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {pageData.slice(1).map((row, rowIndex) => (\r\n                        <tr key={rowIndex} className=\"even:bg-gray-50 hover:bg-green-50\">\r\n                          {row.map((cell, colIndex) => (\r\n                            <td\r\n                              key={colIndex}\r\n                              className=\"px-4 py-3 border-t border-gray-200 align-top\"\r\n                              style={editMode ? { minWidth: '200px' } : {}}\r\n                            >\r\n                              {editMode ? (\r\n                                <input\r\n                                  type=\"text\"\r\n                                  value={cell || \"\"}\r\n                                  onChange={(e) =>\r\n                                    handleCellChange(startIndex + rowIndex + 1, colIndex, e.target.value)\r\n                                  }\r\n                                  style={inputStyle}\r\n                                  spellCheck={false}\r\n                                />\r\n                              ) : (\r\n                                <span>{cell}</span>\r\n                              )}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                {data.length > rowsPerPage && (\r\n                  <div className=\"flex justify-center items-center gap-4 mt-6\">\r\n                    <button\r\n                      onClick={() => setCurrentPage((p) => Math.max(1, p - 1))}\r\n                      disabled={currentPage === 1}\r\n                      className=\"bg-gray-200 px-4 py-2 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n                    >\r\n                      Précédent\r\n                    </button>\r\n                    <span>\r\n                      Page {currentPage} / {totalPages}\r\n                    </span>\r\n                    <button\r\n                      onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))}\r\n                      disabled={currentPage === totalPages}\r\n                      className=\"bg-gray-200 px-4 py-2 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n                    >\r\n                      Suivant\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Boutons d'action */}\r\n                <div className=\"flex flex-wrap justify-center gap-4 mt-6\">\r\n                  {!editMode && !editFinished && (\r\n                    <>\r\n                      <button\r\n                        onClick={handleEdit}\r\n                        className=\"bg-yellow-500 hover:bg-yellow-600 text-white px-5 py-2 rounded flex items-center gap-2\"\r\n                      >\r\n                        <FiEdit /> Modifier\r\n                      </button>\r\n                      <button\r\n                        onClick={handleImportToDB}\r\n                        className=\"bg-green-700 hover:bg-green-800 text-white px-5 py-2 rounded flex items-center gap-2\"\r\n                      >\r\n                        <FiDatabase /> Importer dans la base\r\n                      </button>\r\n                    </>\r\n                  )}\r\n\r\n                  {editMode && (\r\n                    <button\r\n                      onClick={handleFinishEdit}\r\n                      className=\"bg-blue-600 hover:bg-blue-700 text-white px-5 py-2 rounded flex items-center gap-2\"\r\n                    >\r\n                      <FiCheckCircle /> Terminer les modifications\r\n                    </button>\r\n                  )}\r\n\r\n                  {!editMode && editFinished && (\r\n                    <>\r\n                      <button\r\n                        onClick={handleSaveCopy}\r\n                        className=\"bg-gray-700 hover:bg-gray-800 text-white px-5 py-2 rounded flex items-center gap-2\"\r\n                      >\r\n                        <FiSave /> Télécharger la copie modifiée\r\n                      </button>\r\n                      <button\r\n                        onClick={handleImportToDB}\r\n                        className=\"bg-green-700 hover:bg-green-800 text-white px-5 py-2 rounded flex items-center gap-2\"\r\n                      >\r\n                        <FiDatabase /> Importer dans la base\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Message résultat importation */}\r\n                {importStatus && (\r\n                  <p\r\n                    className={`mt-6 text-center font-semibold ${\r\n                      importStatus.success ? \"text-green-700\" : \"text-red-700\"\r\n                    }`}\r\n                  >\r\n                    {importStatus.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Importation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}