{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cesar Boutoile777\\\\Connexion\\\\frontend\\\\dashboard\\\\src\\\\pages\\\\ImporterDonnees.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [typesProjets, setTypesProjets] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [typeProjetSelectionne, setTypeProjetSelectionne] = useState(false);\n  const [fichier, setFichier] = useState(null);\n\n  // Charger les types de projet\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/auth/type_projets', {\n      credentials: 'include'\n    }).then(res => {\n      if (!res.ok) throw new Error('Erreur lors du chargement des types de projet');\n      return res.json();\n    }).then(data => {\n      setTypesProjets(data);\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setLoading(false);\n    });\n  }, []);\n\n  // Envoyer la sélection à Flask\n  const handleSelectionSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    if (!selectedId) {\n      setError('Veuillez sélectionner un type de projet.');\n      return;\n    }\n    try {\n      const res = await fetch('http://127.0.0.1:5000/auth/selection_type_projet', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id_type_projet: selectedId\n        })\n      });\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.error || 'Erreur serveur');\n      }\n      setTypeProjetSelectionne(true);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Gérer l'importation du fichier\n  const handleFileChange = e => {\n    setFichier(e.target.files[0]);\n  };\n  const handleImportSubmit = async e => {\n    e.preventDefault();\n    if (!fichier) {\n      alert(\"Veuillez choisir un fichier Excel.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"fichier_excel\", fichier);\n    try {\n      const res = await fetch(\"http://localhost:5000/auth/importer_excel\", {\n        method: \"POST\",\n        credentials: \"include\",\n        body: formData\n      });\n      if (!res.ok) throw new Error(\"Erreur lors de l'importation.\");\n      alert(\"Importation réussie !\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-6 bg-white shadow rounded mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-center\",\n      children: \"Importation de donn\\xE9es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 mb-4 text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), !typeProjetSelectionne ? loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Chargement des types de projet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSelectionSubmit,\n      children: [typesProjets.map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"typeProjet\",\n          value: type.id_type_projet,\n          onChange: () => setSelectedId(type.id_type_projet),\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), type.nom_facilite]\n      }, type.id_type_projet, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-4 w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 transition\",\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleImportSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 font-semibold\",\n        children: \"Importer un fichier Excel :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx, .xls\",\n        onChange: handleFileChange,\n        className: \"mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\",\n        children: \"Importer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tncYTmPP2Y0VHL1O7rWXekNMgmc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","typesProjets","setTypesProjets","selectedId","setSelectedId","loading","setLoading","error","setError","typeProjetSelectionne","setTypeProjetSelectionne","fichier","setFichier","fetch","credentials","then","res","ok","Error","json","data","catch","err","message","handleSelectionSubmit","e","preventDefault","method","headers","body","JSON","stringify","id_type_projet","errorData","handleFileChange","target","files","handleImportSubmit","alert","formData","FormData","append","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","type","name","value","onChange","nom_facilite","accept","_c","$RefreshReg$"],"sources":["C:/Users/Cesar Boutoile777/Connexion/frontend/dashboard/src/pages/ImporterDonnees.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [typesProjets, setTypesProjets] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [typeProjetSelectionne, setTypeProjetSelectionne] = useState(false);\r\n  const [fichier, setFichier] = useState(null);\r\n\r\n  // Charger les types de projet\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:5000/auth/type_projets', { credentials: 'include' })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error('Erreur lors du chargement des types de projet');\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setTypesProjets(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Envoyer la sélection à Flask\r\n  const handleSelectionSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    if (!selectedId) {\r\n      setError('Veuillez sélectionner un type de projet.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://127.0.0.1:5000/auth/selection_type_projet', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id_type_projet: selectedId }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(errorData.error || 'Erreur serveur');\r\n      }\r\n\r\n      setTypeProjetSelectionne(true);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Gérer l'importation du fichier\r\n  const handleFileChange = (e) => {\r\n    setFichier(e.target.files[0]);\r\n  };\r\n\r\n  const handleImportSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!fichier) {\r\n      alert(\"Veuillez choisir un fichier Excel.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"fichier_excel\", fichier);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/auth/importer_excel\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"Erreur lors de l'importation.\");\r\n\r\n      alert(\"Importation réussie !\");\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto p-6 bg-white shadow rounded mt-10\">\r\n      <h1 className=\"text-2xl font-bold mb-4 text-center\">Importation de données</h1>\r\n\r\n      {error && <div className=\"text-red-600 mb-4 text-center\">{error}</div>}\r\n\r\n      {!typeProjetSelectionne ? (\r\n        loading ? (\r\n          <p className=\"text-center\">Chargement des types de projet...</p>\r\n        ) : (\r\n          <form onSubmit={handleSelectionSubmit}>\r\n            {typesProjets.map((type) => (\r\n              <label key={type.id_type_projet} className=\"block mb-2\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"typeProjet\"\r\n                  value={type.id_type_projet}\r\n                  onChange={() => setSelectedId(type.id_type_projet)}\r\n                  className=\"mr-2\"\r\n                />\r\n                {type.nom_facilite}\r\n              </label>\r\n            ))}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-4 w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 transition\"\r\n            >\r\n              Valider\r\n            </button>\r\n          </form>\r\n        )\r\n      ) : (\r\n        <form onSubmit={handleImportSubmit}>\r\n          <label className=\"block mb-2 font-semibold\">Importer un fichier Excel :</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".xlsx, .xls\"\r\n            onChange={handleFileChange}\r\n            className=\"mb-4\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition\"\r\n          >\r\n            Importer\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}